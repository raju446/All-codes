@isTest
public class AramexShippingServicesMockTest implements WebServiceMock {

   public String serviceName;
   public String ForeignHAWB;
   
   public AramexShippingServicesMockTest(String serviceName){
       this.serviceName = serviceName;
   }
   public void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {

        // Create response element from the autogenerated class.
        // Populate response element.
        // Add response element to the response parameter, as follows:
        //response.put('response_x', responseElement); 
       
       
       if(serviceName == 'SHIPPINGREQUEST'){
         AramexShippingServices.ShipmentCreationResponse_element responseElement = new AramexShippingServices.ShipmentCreationResponse_element();
         responseElement.Transaction_x = getTransaction_x();
         responseElement.Notifications = getArrayOfNotification();
         responseElement.HasErrors = false;
         responseElement.Shipments = getArrayOfProcessedShipment(); 
         response.put('response_x', responseElement);
       }else if(serviceName == 'SHIPPINGREQUESTNULLNOTIFICATION'){ 
         AramexShippingServices.ShipmentCreationResponse_element responseElement = new AramexShippingServices.ShipmentCreationResponse_element();
         responseElement.Transaction_x = getTransaction_x();
         responseElement.Notifications = new AramexShippingServices.ArrayOfNotification();
         
         responseElement.HasErrors = false;
         responseElement.Shipments = getArrayOfProcessedShipment(); 
         response.put('response_x', responseElement);
       
         }else if(serviceName == 'CANCELPICKUP'){
         AramexShippingServices.PickupCancelationResponse_element responseElement = new AramexShippingServices.PickupCancelationResponse_element();
         responseElement.Transaction_x = getTransaction_x();
         responseElement.Notifications = getArrayOfNotification();
         responseElement.HasErrors = false;
         responseElement.Message = 'Message';
         response.put('response_x', responseElement);
         
         
       }else if(serviceName == 'PRINTLABEL'){
         AramexShippingServices.LabelPrintingResponse_element responseElement = new AramexShippingServices.LabelPrintingResponse_element();
         responseElement.Transaction_x = getTransaction_x();
         responseElement.Notifications = new AramexShippingServices.ArrayOfNotification();
         responseElement.HasErrors = false;
         responseElement.ShipmentNumber = '1234567';
         responseElement.ShipmentLabel = getShipmentLabel();
         response.put('response_x', responseElement);   
           
       }else if(serviceName == 'PICKUPREQUEST'){
         AramexShippingServices.PickupCreationResponse_element responseElement = new AramexShippingServices.PickupCreationResponse_element();
         responseElement.Transaction_x = getTransaction_x();
         responseElement.Notifications = new AramexShippingServices.ArrayOfNotification();
         responseElement.HasErrors = false;
         responseElement.ProcessedPickup = getProcessedPickup();
        
         response.put('response_x', responseElement);   
           
       } else if(serviceName == 'HOLDCREATION'){
         AramexShippingServices.HoldCreationResponse_element responseElement = new AramexShippingServices.HoldCreationResponse_element();
         responseElement.Transaction_x = getTransaction_x();
         responseElement.Notifications = new AramexShippingServices.ArrayOfNotification();
         responseElement.HasErrors = false;
         responseElement.ProcessedShipmentHolds = getProcessedShipHold();
        
         response.put('response_x', responseElement);   
           
       } else if(serviceName == 'RESERVESHIPMNETNUMBERRANGE'){
         AramexShippingServices.ReserveRangeResponse_element responseElement = new AramexShippingServices.ReserveRangeResponse_element();
         responseElement.Transaction_x = getTransaction_x();
         responseElement.Notifications = new AramexShippingServices.ArrayOfNotification();
         responseElement.HasErrors = false;
         responseElement.FromWaybill = 'Test';
         responseElement.ToWaybill = 'Test';
        
         response.put('response_x', responseElement);   
           
       } else if(serviceName == 'GETSHIPMNETNUMBERRANGE'){
         AramexShippingServices.LastReservedShipmentNumberRangeResponse_element responseElement = new AramexShippingServices.LastReservedShipmentNumberRangeResponse_element ();
         responseElement.Transaction_x = getTransaction_x();
         responseElement.Notifications = new AramexShippingServices.ArrayOfNotification();
         responseElement.HasErrors = false;
         responseElement.FromWaybill = 'Test';
         responseElement.ToWaybill = 'Test';
        
         response.put('response_x', responseElement);   
       }
       
       
       
        
   }


   public AramexShippingServices.ArrayOfNotification getArrayOfNotification(){
    AramexShippingServices.ArrayOfNotification ArrayOfNotification = new AramexShippingServices.ArrayOfNotification();
      List<AramexShippingServices.Notification> Notification = new List<AramexShippingServices.Notification>();
      AramexShippingServices.Notification n =  new AramexShippingServices.Notification();
      n.Code = 'CODE123';
      n.Message = 'MESSAGE123';
      Notification.add(n);
      ArrayOfNotification.Notification = Notification;
      return ArrayOfNotification;

   }
   public AramexShippingServices.Transaction_x getTransaction_x(){
      AramexShippingServices.Transaction_x Transaction_x = new AramexShippingServices.Transaction_x();
      Transaction_x.Reference1 = 'Reference1';
      Transaction_x.Reference2 = 'Reference2';
      Transaction_x.Reference3 = 'Reference3';
      Transaction_x.Reference4 = 'Reference4';
      Transaction_x.Reference5 = 'Reference5';
      return Transaction_x;
     
   } 
   public AramexShippingServices.ArrayOfProcessedShipment getArrayOfProcessedShipment(){
    AramexShippingServices.ArrayOfProcessedShipment ArrayOfProcessedShipment = new AramexShippingServices.ArrayOfProcessedShipment();
    List<AramexShippingServices.ProcessedShipment> ProcessedShipment = new List<AramexShippingServices.ProcessedShipment>();
    AramexShippingServices.ProcessedShipment p = new AramexShippingServices.ProcessedShipment();
    p.ID = '1234567';
    p.Reference1 = 'Reference1';
    p.Reference2 = 'Reference2';
    p.Reference3 = 'Reference3';
    p.ForeignHAWB = ForeignHAWB;
    
    ProcessedShipment.add(p);
    ArrayOfProcessedShipment.ProcessedShipment = ProcessedShipment;
    return ArrayOfProcessedShipment;
    


   }
   
   public AramexShippingServices.ShipmentLabel getShipmentLabel(){
       AramexShippingServices.ShipmentLabel ShipmentLabel = new AramexShippingServices.ShipmentLabel();
       ShipmentLabel.LabelURL = 'https://www.test.com';
       ShipmentLabel.LabelFileContents = 'ShipmentLabel';
       return ShipmentLabel;
       
   }
   
   public AramexShippingServices.ProcessedPickup getProcessedPickup(){
       AramexShippingServices.ProcessedPickup ProcessedPickup = new AramexShippingServices.ProcessedPickup();
       ProcessedPickup.ID = '123222';
       ProcessedPickup.GUID = '123123';
       ProcessedPickup.Reference1 = 'Reference1';
       ProcessedPickup.Reference2 =  'Reference2';
       ProcessedPickup.ProcessedShipments  = getArrayOfProcessedShipment();
       return ProcessedPickup;
   }

   public AramexShippingServices.ArrayOfProcessedShipmentHold getProcessedShipHold(){
        AramexShippingServices.ArrayOfProcessedShipmentHold ArrayOfProcessedShipmentHold = new AramexShippingServices.ArrayOfProcessedShipmentHold ();
        List<AramexShippingServices.ProcessedShipmentHold > ProcessedShipmentHold = new List<AramexShippingServices.ProcessedShipmentHold >();
        AramexShippingServices.ProcessedShipmentHold p = new AramexShippingServices.ProcessedShipmentHold ();
        p.ID = '1234567';
        p.HasErrors = false;
        p.Notifications = getArrayOfNotification();
        
        ProcessedShipmentHold.add(p);
        ArrayOfProcessedShipmentHold.ProcessedShipmentHold = ProcessedShipmentHold;
        return ArrayOfProcessedShipmentHold;
   }

}