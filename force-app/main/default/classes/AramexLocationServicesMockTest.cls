@isTest
public class AramexLocationServicesMockTest implements WebServiceMock {
  public String serviceName;
  public AramexLocationServicesMockTest(String serviceName) {
    this.serviceName = serviceName;

  }
  public void doInvoke(
    Object stub,
    Object request,
    Map<String, Object> response,
    String endpoint,
    String soapAction,
    String requestName,
    String responseNS,
    String responseName,
    String responseType) {

    // Create response element from the autogenerated class.
    // Populate response element.
    // Add response element to the response parameter, as follows:
    //response.put('response_x', responseElement);
    if (serviceName.equals('FETCHCOUNTRIES')) {
      AramexLocationServices.CountriesFetchingResponse_element responseElement = new AramexLocationServices.CountriesFetchingResponse_element();
      responseElement.hasErrors = false;
      responseElement.Transaction_x = getTransaction_x();
      responseElement.Countries = getArrayOfCountry();
      responseElement.Notifications = new AramexLocationServices.ArrayOfNotification();
      response.put('response_x', responseElement);
    } else if (serviceName.equals('FETCHCITIES')) {

      AramexLocationServices.CitiesFetchingResponse_element responseElement = new AramexLocationServices.CitiesFetchingResponse_element();
      responseElement.hasErrors = false;
      responseElement.Transaction_x = getTransaction_x();
      responseElement.Notifications = new AramexLocationServices.ArrayOfNotification();
      responseElement.Cities = getCities();
      response.put('response_x', responseElement);
    }
    else if (serviceName.equals('FETCHOFFICES')) {

      AramexLocationServices.OfficesFetchingResponse_element responseElement = new AramexLocationServices.OfficesFetchingResponse_element();
      responseElement.hasErrors = false;
      responseElement.Transaction_x = getTransaction_x();
      responseElement.Notifications = new AramexLocationServices.ArrayOfNotification();
      responseElement.Offices = getOffices();
      response.put('response_x', responseElement);
    }
  }

  public AramexLocationServices.Transaction_x getTransaction_x() {
    AramexLocationServices.Transaction_x Transaction_x = new AramexLocationServices.Transaction_x();
    Transaction_x.Reference1 = 'Reference1';
    Transaction_x.Reference2 = 'Reference2';
    Transaction_x.Reference3 = 'Reference3';
    Transaction_x.Reference4 = 'Reference4';
    Transaction_x.Reference5 = 'Reference5';
    return Transaction_x;

  }

  public static AramexLocationServices.ArrayOfCountry getArrayOfCountry() {
    AramexLocationServices.ArrayOfCountry ArrayOfCountry = new AramexLocationServices.ArrayOfCountry();
    List<AramexLocationServices.Country> countryList = new List<AramexLocationServices.Country>();
    AramexLocationServices.Country country = new AramexLocationServices.Country();
    country.code = 'Code';
    country.IsoCode  = 'IsoCode';
    country.Name = 'Name';
    country.stateRequired = false;
    country.postCodeRequired =  false;
    country.InternationalCallingNumber = '123123';
    countryList.add(country);
    ArrayOfCountry.Country = countryList;
    return ArrayOfCountry;

  }

  public static AramexLocationServicesArr.ArrayOfstring getCities(){
   
   AramexLocationServicesArr.ArrayOfstring cities =  new AramexLocationServicesArr.ArrayOfstring();
   List<String> cityList = new List<String>();
   cityList.add('A');
   cityList.add('B');
   cities.string_x = cityList;
   return cities;

  }
  public static AramexLocationServices.ArrayOfOffice getOffices(){
   
   AramexLocationServices.ArrayOfOffice ArrayOfOffice =  new AramexLocationServices.ArrayOfOffice();
   List<AramexLocationServices.Office> officeList = new List<AramexLocationServices.Office>();
   AramexLocationServices.Office office = new AramexLocationServices.Office();
   office.Entity = 'Entity';
   office.EntityDescription = 'EntityDescription';
   office.OfficeType = 'OfficeType';
   office.Telephone = 'Telephone';
   office.WorkingDays = 'WorkingDays';
   office.WorkingHours = 'WorkingHours';
   office.Longtitude = 10.0;
   office.Latitude = 10.0;
   office.Address = getAddress();
   officeList.add(office);
   ArrayOfOffice.Office = officeList;
   return ArrayOfOffice;

  }
  
  public static AramexLocationServices.Address getAddress(){
      AramexLocationServices.Address address =  new AramexLocationServices.Address();
      address.Line1 = 'Line1';
      address.Line2 = 'Line2';
      address.Line3 = 'Line3';
      address.City = 'City';
      address.StateOrProvinceCode = '123';
      address.PostCode = '123';
      address.CountryCode = 'AUH';
      return address;
      
  }
  
}